@use "sass:map";

@function str-split($string, $separator) {
  $i: str-index($string, $separator);
  @if $i != null {
    @return append(
      str-slice($string, 1, $i - 1),
      str-split(str-slice($string, $i + str-length($separator)), $separator)
    );
  }
  @return $string;
}

@mixin themed($selector: '', $theme: null) {
  $themes: (light, dark);

  @if $theme == null {
    @each $th in $themes {
      @each $s in str-split($selector, ',') {
        [theme=#{$th}] #{$s} {
          @content;
        }
      }
    }
  }
  @else {
    @each $s in str-split($selector, ',') {
      [theme=#{$theme}] #{$s} {
        @content;
      }
    }
  }
}

@mixin light() {
  [theme=light] & {
    @content;
  }
}

@mixin dark() {
  [theme=dark] & {
    @content;
  }
}

@mixin createTippyTheme($theme, $bgColor, $textColor) {
  .tippy-box[data-theme~='#{$theme}'] {
    @apply font-medium;
    background-color: $bgColor;
    color: $textColor;
  }

  .tippy-box[data-theme~='#{$theme}'][data-placement^='top'] > .tippy-arrow::before {
    border-top-color: $bgColor;
  }

  .tippy-box[data-theme~='#{$theme}'][data-placement^='bottom'] > .tippy-arrow::before {
    border-bottom-color: $bgColor;
  }

  .tippy-box[data-theme~='#{$theme}'][data-placement^='left'] > .tippy-arrow::before {
    border-left-color: $bgColor;
  }

  .tippy-box[data-theme~='#{$theme}'][data-placement^='right'] > .tippy-arrow::before {
    border-right-color: $bgColor;
  }
}
